using DMRules.Tests;
using static DMRules.Tests.TestCompatOverloads;
using static DMRules.Tests.V15Compat;using DMRules.Engine;
using FluentAssertions;
using Xunit;

namespace DMRules.Tests;

public class ContinuousEffectOrderTests
{
    [Fact(DisplayName = "Continuous effects apply on zone-enter before ETB checks")]
    public void ContinuousEffectsBeforeEtb()
    {
        var s = new MinimalState(0, "Main", "TP");
        s = Adapter.Instance.OnZoneEnterApplyContinuousEffects(s);
        s.Should().NotBeNull();
    }

    [Theory(DisplayName = "CSV: Zone-enter order scenarios")]
    [MemberData(nameof(EnterData))]
    public void CsvEnterScenarios(ScenarioRow row)
    {
        var s = new MinimalState(0, "Main", "TP");
        s = Adapter.Instance.OnZoneEnterApplyContinuousEffects(s);
        s.Should().NotBeNull();
    }

    public static IEnumerable<object[]> EnterData()
    {
        var rows = CsvScenarios.Load(Path.Combine("TestData", "enter_order.csv"));
        foreach (var r in rows) yield return new object[] { r };
    }
}






