using DMRules.Tests;
using static DMRules.Tests.TestCompatOverloads;
using static DMRules.Tests.V15Compat;using DMRules.Engine;
using FluentAssertions;
using Xunit;

namespace DMRules.Tests;

public class Official_APNAP_Tests
{
    [Fact(DisplayName = "APNAP: Simultaneous triggers resolve Turn Player first")]
    public void APNAP_TurnPlayerFirst()
    {
        var s = new MinimalState(0, "Main", "TP");
        // Arrange: adapter should queue two triggers, marked TP and NP, in S-phase batch
        s = Adapter.Instance.EnqueueNewTriggers(s); // your adapter should write QUEUE[S:TP]/QUEUE[S:NP] into Audit

        // Act
        s = Adapter.Instance.ResolveSAndOtherTriggers(s);

        // Assert: Audit should reflect TP before NP within S-phase
        var log = Adapter.Instance.Audit.Dump();
        var tpIndex = log.FindIndex(x => x.StartsWith("QUEUE[S:TP]"));
        var npIndex = log.FindIndex(x => x.StartsWith("QUEUE[S:NP]"));
        tpIndex.Should().BeGreaterThanOrEqualTo(0);
        npIndex.Should().BeGreaterThanOrEqualTo(0);
        tpIndex.Should().BeLessThan(npIndex, "APNAP requires Turn Player before Non-Turn Player for simultaneous triggers");
    }
}






